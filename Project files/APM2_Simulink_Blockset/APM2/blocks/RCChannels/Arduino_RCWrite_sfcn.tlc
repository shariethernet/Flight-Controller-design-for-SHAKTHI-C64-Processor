%% This code was developed as part of graduate coursework at Embry-Riddle Aeronautical University
%% under the guidance of Dr. Pat Anderson and Dr. Hever Moncayo.

%% Author: Robert F. Hartley
%% Assistant Developers: Francois Hugon, Brian DeRosa, and Christopher Carvalho
%% Support: apm2.simulink@gmail.com

%% Oct. 25, 2012
%% Version 1.0



%% File : Arduino_RCWrite_sfcn.tlc
%%

%implements "Arduino_RCWrite_sfcn" "C"


%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included. This is common to all APM2
  %% blocks.
  %if EXISTS("_DONE_SYSTEM_INC_BLOCK_TYPE_SETUP_") == 0
    %assign:: _DONE_SYSTEM_INC_BLOCK_TYPE_SETUP_ = 1
    %if (CompiledModel.TargetStyle!="SimulationTarget")
      %<LibAddToCommonIncludes("Simulink_APM2_Wrapper.h")>
    %endif
  %endif 

%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output

  %% Start up APM2 board. Common to all APM2 blocks.
  %if EXISTS("_DONE_SYSTEM_INIT_") == 0
     %assign :: _DONE_SYSTEM_INIT_ = 1
     /* APM2 System startup function. Required for any blocks. Inserted by:
     %<Type> (%<ParamSettings.FunctionName>): %<Name> */
     Simulink_APM2_Startup();
  %endif

  %% Only insert the init once
  %if EXISTS("_DONE_RCWRITE_INIT_") == 0
    %assign :: _DONE_RCWRITE_INIT_ = 1
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
    
    /* All of init handled in the System setup function */
    

  %endif

  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output

%%  %if !SLibCodeGenForSim()
  %if (CompiledModel.TargetStyle!="SimulationTarget")  
%%      %assign p1_val = LibBlockParameter(Channel, "", "", 0)
%%      %assign u1_val = LibBlockInputSignal(0, "", "", 0)
 
    %% SCALE THIS!!
      APM_RC_OutputCh( (uint8_T)0, (uint16_T)%<LibBlockInputSignal(0, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)1, (uint16_T)%<LibBlockInputSignal(1, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)2, (uint16_T)%<LibBlockInputSignal(2, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)3, (uint16_T)%<LibBlockInputSignal(3, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)4, (uint16_T)%<LibBlockInputSignal(4, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)5, (uint16_T)%<LibBlockInputSignal(5, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)6, (uint16_T)%<LibBlockInputSignal(6, "", "", 0)>);
      APM_RC_OutputCh( (uint8_T)7, (uint16_T)%<LibBlockInputSignal(7, "", "", 0)>);

  %endif

%endfunction

%% [EOF]
